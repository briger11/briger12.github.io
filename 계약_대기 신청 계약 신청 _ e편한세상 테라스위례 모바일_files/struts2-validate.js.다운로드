/* TextField, TextArea 유효성 검사를 한다. * @param : ojbName   : 객체이름 *          maxLength : 최대 byte 수(영문 1byte, 한글 2byte) * 			minLength : 최소 byte 수(영문 1byte, 한글 2byte) * 			len       : 최소 길이(byte 아님) *          type      : (예, number, email, phone, text) *          message   : 메시지명 * */function isEmptyText(objName, len, maxLength, minLength, type, message) {	var obj = document.getElementById(objName) ;		if (type != "edit") {			if(obj == null || obj.value == ""){			return alertMsg(obj, message) ;		}else{			var length = obj.value.length ;			if(len>0){	// 길이체크를 하지 않을경우, 0을 입력.				if(length >= len){					var ojbLength = byteCheck(obj) ;					if(ojbLength > maxLength){						$layerPopup.close('.popup-wrap');						if(type == "number"){							$('#toast_pop_01 > .toast > .text ').text(message+"은  "+maxLength+"자까지 입력가능합니다.");						} else {							$('#toast_pop_01 > .toast > .text ').text(message+"은  "+maxLength+"byte(약 "+(maxLength/2)+"자)까지 입력가능합니다.");							}						$toastPopup.open("#toast_pop_01")						//alert(message+"은  "+maxLength+"byte(약 "+(maxLength/2)+"자)까지 입력가능합니다.");						obj.focus() ;						return false ;						}						}else if(length < len){					return alertMinLengthMsg(obj, message, len) ;				}			}						if(type == "number"){				if (!isNumber(obj.value)) {					$layerPopup.close('.popup-wrap');					$('#toast_pop_01 > .toast > .text ').text(message+"은  숫자만 입력가능합니다.");					$toastPopup.open("#toast_pop_01")					//alert(message+"은  숫자만 입력가능합니다.");					obj.focus() ;					return  false;				}			}						if(type=="phone"){				var regExp = /^\d{3}-\d{3,4}-\d{4}$/;				if ( !regExp.test( obj.value) ) {					$layerPopup.close('.popup-wrap');					$('#toast_pop_01 > .toast > .text ').text(message+"은 잘못된 형식입니다. 숫자,-를 포함한 숫자만 입력해야 합니다.");					$toastPopup.open("#toast_pop_01");					return false;				}			}			return true;		}	} else {		//내용은 입력여부만 체크한다.		var ckedit_val = CKEDITOR.instances[objName].getData();		if(obj == null || ckedit_val == ""){			return alertMsg(obj, message) ;		}		return true;	}}/* Checkbox 유효성 검사를 한다.* @param : ojbName    : 객체이름*          message    : 메시지명* */function isEmptyCheckbox(objName, message){	var obj = document.getElementById(objName) ;	if(obj.checked){		return true ;	}else{		$layerPopup.close('.popup-wrap');		$('#toast_pop_01 > .toast > .text ').text(message + '(은)는 필수항목입니다.');		$toastPopup.open("#toast_pop_01")		//alert(message + '(은)는 필수항목입니다.') ;		obj.focus() ;		return false ;	}}/* Selectbox 유효성 검사를 한다.* @param : ojbName    : 객체이름*          message    : 메시지명* */function isEmptySelectbox(objName, message){	var obj = document.getElementById(objName) ;		if(obj.value == ''){		$('#toast_pop_01 > .toast > .text ').text(message + '(은)는 필수항목입니다.');		$toastPopup.open("#toast_pop_01")		//alert(message + '(은)는 필수항목입니다.') ;		obj.focus() ;		return false ;	}else{		return true ;	}}/** * 라디오 체크 여부 검증 * @param objName * @param message * @return */function isEmptyRadio(objName,message){	if($(":input:radio[name="+objName+"]:checked").val() == undefined){		$layerPopup.close('.popup-wrap');		$('#toast_pop_01 > .toast > .text ').text(message + '(은)는 필수항목입니다.');		$toastPopup.open("#toast_pop_01")		//alert(message + '(은)는 필수항목입니다.') ;		$(":input:radio[name="+objName+"]")[0].focus();		return false;	} else {		return true;	}}/* 값이 입력되지 않았을 때 뿌려지는 메시지 */function alertMsg(obj, message){	$layerPopup.close('.popup-wrap');	$('#toast_pop_01 > .toast > .text ').text(message + '(은)는 필수항목입니다.');	$toastPopup.open("#toast_pop_01")	obj.focus() ;	return false;}/* 값이 최소길이보다 작을때 뿌려지는 메시지 */function alertMinLengthMsg(obj, message, len){	$layerPopup.close('.popup-wrap');	$('#toast_pop_01 > .toast > .text ').text(message + '(은)는 최소 '+ len + "자리를 입력해야 합니다.");	$toastPopup.open("#toast_pop_01")	//alert(message + '(은)는 최소 '+ len + "자리를 입력해야 합니다.") ;	obj.focus() ;  	return false ;}function byteCheck(code){	var code_byte = 0;    for (var inx = 0; inx < code.value.length; inx++) {        var oneChar = escape(code.value.charAt(inx));        if ( oneChar.length == 1 ) {            code_byte ++;        } else if (oneChar.indexOf("%u") != -1) {            code_byte += 2;        } else if (oneChar.indexOf("%") != -1) {            code_byte += oneChar.length/3;        }    }    return code_byte;}/** * 오직 숫자로만 이루어져 있는지 체크 한다. * * @param   num * @return  boolean */function isNumber(num) {	var notNumberPattern    = /[^0-9.-]/;	var twoDotPattern       = /[0-9]*[.][0-9]*[.][0-9]*/;	var twoMinusPattern     = /[0-9]*[-][0-9]*[-][0-9]*/;	var validRealPattern    = /^([-]|[.]|[-.]|[0-9])[0-9]*[.]*[0-9]+$/;	var validIntegerPattern = /^([-]|[0-9])[0-9]*$/;	var validNumberPattern  = /(^([-]|[.]|[-.]|[0-9])[0-9]*[.]*[0-9]+$)|(^([-]|[0-9])[0-9]*$)/;	num = rtrim(num);	return  !notNumberPattern.test(num) &&			!twoDotPattern.test(num)    &&			!twoMinusPattern.test(num)  &&			validNumberPattern.test(num);}/** * rtrim * * @param   text * @return  string */function rtrim(text) {	if (text == "") {		return  text;	}	var len = text.length;	var st  = 0;	while ((st < len) && (text.charAt(len - 1) <= ' ')) {		len--;	}	return  (len < text.length) ? text.substring(st, len) : text;}//금액 콤마function addComma(data) {	 	return data.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");}/** * 콤마 삭제 * @param value * @returns */function removeComma(value) {	return value.replace(/,/g, "");}//날짜변환function getStringToDateFormat(str) {		var yyyy = str.substring(0, 4);	var mm = str.substring(4, 6);	var dd = str.substring(6, 8);		return yyyy + '-' + mm + '-' + dd;}